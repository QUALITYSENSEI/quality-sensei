import { useEffect } from 'react';
import { Link } from 'wouter';
import { motion } from 'framer-motion';
import { ChevronLeft, Code as CodeIcon } from 'lucide-react';
import Header from '@/components/layout/Header';
import Footer from '@/components/layout/Footer';
import { Helmet } from 'react-helmet';
import { SiSelenium, SiTestinglibrary, SiCucumber, SiAppium, SiJenkins } from 'react-icons/si';
import Breadcrumbs from '@/components/ui/Breadcrumbs';
import { Separator } from '@/components/ui/separator';

// Lab card type
interface LabCard {
  id: string;
  title: string;
  description: string;
  icon: React.ReactNode;
  level: 'Beginner' | 'Intermediate' | 'Advanced';
  color: string;
  route: string;
  modules: number;
  duration: string;
}

// Automation lab cards
const automationLabs: LabCard[] = [
  {
    id: 'selenium',
    title: 'Selenium WebDriver',
    description: 'Learn to automate web browsers with the most popular automation framework.',
    icon: <SiSelenium className="h-10 w-10" />,
    level: 'Beginner',
    color: 'from-green-500 to-emerald-700',
    route: '/labs/automation/selenium',
    modules: 8,
    duration: '6 hours'
  },
  {
    id: 'testng',
    title: 'TestNG Framework',
    description: 'Master test organization, parallelization, and reporting with TestNG.',
    icon: <SiTestinglibrary className="h-10 w-10" />,
    level: 'Intermediate',
    color: 'from-blue-500 to-indigo-700',
    route: '/labs/automation/testng',
    modules: 6,
    duration: '4 hours'
  },
  {
    id: 'cucumber',
    title: 'Cucumber BDD',
    description: 'Practice behavior-driven development with Gherkin syntax and Cucumber.',
    icon: <SiCucumber className="h-10 w-10" />,
    level: 'Intermediate',
    color: 'from-lime-500 to-green-700',
    route: '/labs/automation/cucumber',
    modules: 5,
    duration: '3 hours'
  },
  {
    id: 'shaft',
    title: 'SHAFT Engine',
    description: 'Learn this test automation engine built on top of Selenium WebDriver.',
    icon: <CodeIcon className="h-10 w-10" />,
    level: 'Advanced',
    color: 'from-purple-500 to-purple-900',
    route: '/labs/automation/shaft',
    modules: 7,
    duration: '5 hours'
  },
  {
    id: 'appium',
    title: 'Appium Mobile',
    description: 'Automate mobile applications on Android and iOS platforms.',
    icon: <SiAppium className="h-10 w-10" />,
    level: 'Advanced',
    color: 'from-purple-500 to-pink-700',
    route: '/labs/automation/appium',
    modules: 9,
    duration: '7 hours'
  },
  {
    id: 'ci-cd',
    title: 'CI/CD Integration',
    description: 'Integrate test automation into CI/CD pipelines with Jenkins.',
    icon: <SiJenkins className="h-10 w-10" />,
    level: 'Advanced',
    color: 'from-red-500 to-rose-700',
    route: '/labs/automation/ci-cd',
    modules: 4,
    duration: '3 hours'
  }
];

// Animation variants
const containerVariants = {
  hidden: { opacity: 0 },
  visible: {
    opacity: 1,
    transition: {
      staggerChildren: 0.1
    }
  }
};

const itemVariants = {
  hidden: { opacity: 0, y: 20 },
  visible: {
    opacity: 1,
    y: 0,
    transition: { duration: 0.5 }
  }
};

const AutomationLabs = () => {
  // Scroll to top on load
  useEffect(() => {
    window.scrollTo(0, 0);
  }, []);

  // Badge color based on level
  const getLevelBadgeColor = (level: string) => {
    switch (level) {
      case 'Beginner':
        return 'bg-green-100 text-green-800 dark:bg-green-800/20 dark:text-green-400';
      case 'Intermediate':
        return 'bg-blue-100 text-blue-800 dark:bg-blue-800/20 dark:text-blue-400';
      case 'Advanced':
        return 'bg-purple-100 text-purple-800 dark:bg-purple-800/20 dark:text-purple-400';
      default:
        return 'bg-gray-100 text-gray-800 dark:bg-gray-800/20 dark:text-gray-400';
    }
  };

  return (
    <>
      <Helmet>
        <title>Automation Testing Labs | Quality Sensei</title>
        <meta name="description" content="Practice automation testing with our interactive labs. Learn Selenium, TestNG, Cucumber BDD, and more." />
        <meta property="og:title" content="Automation Testing Labs | Quality Sensei" />
        <meta property="og:description" content="Practice automation testing with our interactive labs. Learn Selenium, TestNG, Cucumber BDD, and more." />
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://qualitysensei.com/labs/automation" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:title" content="Automation Testing Labs | Quality Sensei" />
        <meta name="twitter:description" content="Practice automation testing with our interactive labs. Learn Selenium, TestNG, Cucumber BDD, and more." />
        <link rel="canonical" href="https://qualitysensei.com/labs/automation" />
      </Helmet>
      
      <Header />
      
      <main className="pt-32 pb-12">
        <div className="container mx-auto px-4">
          {/* Breadcrumb Navigation */}
          <Breadcrumbs
            items={[
              { label: 'Labs', href: '/labs' },
              { label: 'Automation', href: '/labs/automation', active: true }
            ]}
          />
          
          <Separator className="mb-6" />
          
          {/* Back link */}
          <Link href="/labs" className="inline-flex items-center text-primary hover:underline mb-8">
            <ChevronLeft className="w-4 h-4 mr-1" />
            Back to All Labs
          </Link>
          
          {/* Page Header */}
          <motion.div 
            className="max-w-3xl mx-auto text-center mb-12"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
          >
            <div className="inline-flex items-center justify-center w-16 h-16 rounded-full bg-purple-100 text-purple-600 dark:bg-purple-900/30 dark:text-purple-400 mb-4">
              <Code className="w-8 h-8" />
            </div>
            <h1 className="text-4xl md:text-5xl font-bold mb-4">Automation Testing Labs</h1>
            <p className="text-xl text-muted-foreground">
              Hands-on automation labs to master various automation frameworks and tools.
            </p>
          </motion.div>
          
          {/* Lab Cards Grid */}
          <motion.div
            className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto"
            variants={containerVariants}
            initial="hidden"
            animate="visible"
          >
            {automationLabs.map((lab) => (
              <motion.div
                key={lab.id}
                className="neomorphic-card overflow-hidden transition-all duration-300 hover:-translate-y-2 hover:shadow-lg border-2 border-transparent hover:border-primary/30"
                variants={itemVariants}
              >
                <Link href={lab.route}>
                  <div className="cursor-pointer">
                    <div className={`h-32 bg-gradient-to-r ${lab.color} flex items-center justify-center`}>
                      <div className="bg-white/20 w-20 h-20 rounded-full flex items-center justify-center">
                        {lab.icon}
                      </div>
                    </div>
                    <div className="p-6">
                      <span className={`inline-block px-2 py-1 rounded-full text-xs font-medium mb-4 ${getLevelBadgeColor(lab.level)}`}>
                        {lab.level}
                      </span>
                      <h3 className="text-xl font-bold mb-2">{lab.title}</h3>
                      <p className="text-sm text-muted-foreground mb-4">{lab.description}</p>
                      <div className="flex justify-between text-sm">
                        <span className="text-muted-foreground">{lab.modules} Modules</span>
                        <span className="text-muted-foreground">{lab.duration}</span>
                      </div>
                    </div>
                  </div>
                </Link>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </main>
      
      <Footer />
    </>
  );
};

// Import the Code icon component
const Code = ({ className }: { className?: string }) => (
  <svg 
    xmlns="http://www.w3.org/2000/svg" 
    fill="none" 
    viewBox="0 0 24 24" 
    stroke="currentColor" 
    className={className}
  >
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
  </svg>
);

export default AutomationLabs;